---
import chapters from "../data/chapters.json";
import Layout from "../layouts/Layout.astro";
---

<Layout title="Home">
	<div
		class="intro absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 text-center"
	>
		<div class="overflow-hidden">
			<h1 class="text title font-serif text-5xl">Vox Obscura</h1>
		</div>

		<div class="mt-1.5 overflow-hidden">
			<p class="text subtitle text-xs uppercase text-neutral-300">
				Press <kbd>Space</kbd> to enter
			</p>
		</div>
	</div>

	<nav class="relative h-svh w-full md:w-1/2 xl:w-1/3">
		<div class="grid size-full divide-y divide-neutral-700/70 backdrop-blur">
			{
				chapters.map((chapter, i) => (
					<a
						class="row group flex origin-left items-center border-r border-r-neutral-700/70 bg-black/50 p-6"
						href={chapter.slug}
					>
						<div class="chapter">
							<span class="font-mono text-xs text-neutral-500">
								&lbrace;0{i + 1}&rbrace;
							</span>

							<div class="*:transition-colors *:duration-300">
								<h2 class="text-lg font-semibold text-neutral-400 group-hover:text-white">
									{chapter.name}
								</h2>

								<p class="text-sm text-neutral-500 group-hover:text-neutral-300">
									{chapter.description}
								</p>
							</div>
						</div>
					</a>
				))
			}
		</div>
	</nav>

	<div class="absolute right-6 top-4 overflow-hidden">
		<button id="sound-control" class="link font-mono text-sm" type="button">
			<span class="unmute opacity-0">un</span>mute
		</button>
	</div>

	<nav class="absolute bottom-4 right-6 flex gap-x-2 overflow-hidden text-sm">
		<div class="overflow-hidden">
			<a class="font-mono" href="/about">about</a>
		</div>

		<div class="overflow-hidden">
			<span class="text-neutral-500">&mdash;</span>
		</div>

		<div class="overflow-hidden">
			<a class="font-mono" href="/all">index</a>
		</div>
	</nav>
</Layout>

<script>
	import { timeline, stagger, animate } from "motion";
	import { expoInOut } from "../util";

	const ambience = document.getElementById("ambience") as HTMLAudioElement;
	const soundBtn = document.getElementById("sound-control") as HTMLButtonElement;

	let introScreenDone = false;

	const controls = timeline(
		[
			[
				".row",
				{ scaleX: [0, 1] },
				{ delay: stagger(0.1), duration: 1.5, easing: expoInOut },
			],
			[
				".chapter",
				{ opacity: [0, 1], y: [-24, 0] },
				{ delay: stagger(0.15), duration: 1, at: "-0.5" },
			],
			["#sound-control", { y: [-24, 0] }, { duration: 0.75, at: "-0.5" }],
			[
				"nav:last-of-type > *",
				{ y: [24, 0] },
				{ delay: stagger(0.1), duration: 0.75, at: "-0.5" },
			],
		],
		{ autoplay: false }
	);

	await animate(
		".text",
		{ y: [64, 0] },
		{ delay: stagger(0.1), duration: 1, easing: expoInOut }
	).finished;

	introScreenDone = true;

	addEventListener("keydown", async (event) => {
		if (!introScreenDone || event.code !== "Space") return;

		await timeline(
			[
				[".subtitle", { y: 64 }],
				[".title", { y: 64 }, { at: "-0.8" }],
			],
			{ defaultOptions: { duration: 1, easing: expoInOut } }
		).finished;

		ambience.play();
		controls.play();
	});

	soundBtn.addEventListener("click", () => {
		ambience.muted = !ambience.muted;

		animate(".unmute", { opacity: ambience.muted ? 1 : 0 });
	});
</script>
