---
import type { GetStaticPathsResult } from "astro";
import Navigation from "../../components/Navigation.astro";
import Layout from "../../layouts/Layout.astro";
import { dictionary } from "../../lib/dictionary";
import { romanNumerals } from "../../lib/util";

export function getStaticPaths(): GetStaticPathsResult {
	return Object.keys(dictionary.chapters).map((slug) => ({
		params: { chapter: slug },
	}));
}

const chapter = dictionary.chapters[Astro.params.chapter!];
---

<Layout title={chapter.name}>
	<Navigation current={chapter.slug} />

	<div id="intro" class="h-[500svh] px-6">
		<div class="ch-intro sticky top-0 flex h-lvh items-center justify-center">
			<div class="*:overflow-hidden">
				<div>
					<span
						class="ch-number inline-block font-serif text-2xl tracking-wide"
					>
						{romanNumerals[chapter.id]}
					</span>
				</div>

				<div>
					<h1 class="ch-title text-5xl font-black uppercase">{chapter.name}</h1>
				</div>

				<div>
					<h2 class="ch-description text-neutral-300">
						{chapter.description}
					</h2>
				</div>
			</div>
		</div>

		<div
			id="quotes"
			class="sticky top-0 -mt-[100vh] flex h-lvh items-center justify-center"
		>
			<div class="flex flex-col gap-y-6 overflow-hidden">
				{
					chapter.quotes.map((quote) => (
						<figure class="quote prose prose-neutral !prose-invert font-serif opacity-0">
							<blockquote class="text-neutral-300 not-italic">
								<p
									class:list={[
										"text-justify before:hidden",
										chapter.id < 2 && "whitespace-pre",
									]}
									set:html={quote.body}
								/>
							</blockquote>

							<figcaption>
								&mdash; {quote.author}, <cite>{quote.source}</cite>
							</figcaption>
						</figure>
					))
				}
			</div>
		</div>
	</div>

	<div id="words" class="grid-auto grid grid-cols-2 overflow-hidden">
		{
			chapter.words.map((word) => (
				<a
					class="grid-cell relative aspect-square p-4 break-words transition-colors duration-1000 hover:bg-black/50 hover:duration-0"
					href={`/${word.chapter}/${word.slug}`}
				>
					<span class="text-3xl text-white">{word.name}</span>
				</a>
			))
		}
	</div>
</Layout>

<script>
	import { animate, scroll } from "motion";
	import { expoInOut } from "../../lib/util";

	document.addEventListener("astro:page-load", () => {
		const intro = document.getElementById("intro")!;
		if (!intro) return;

		animate(
			[
				[".ch-title", { y: ["100%", 0] }, { ease: expoInOut }],
				[".ch-number", { y: ["100%", 0] }, { at: "-0.8", ease: expoInOut }],
				[".ch-description", { y: ["-100%", 0] }, { at: "-0.8", ease: expoInOut }],
			],
			{ duration: 1 }
		);

		scroll(
			animate([
				[".ch-intro", { opacity: 0 }],
				[".quote", { opacity: [null, 1, 0] }, { duration: 1 }],
			]),
			{
				target: intro,
				offset: ["start start", "end end"],
			}
		);
	});
</script>

<style>
	@media (width >= 640px) {
		.grid-auto {
			grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
		}
	}

	.grid-cell::before,
	.grid-cell::after {
		content: "";
		z-index: 1;
		position: absolute;
		background: var(--color-neutral-700);
		inset-block-start: 0;
		inset-inline-start: 0;
		/* Avoid sub-pixel rendering */
		will-change: transform;
		transform: translateZ(0);
	}

	.grid-cell::before {
		block-size: 100vh;
		inline-size: 1px;
	}

	.grid-cell::after {
		block-size: 1px;
		inline-size: 100vw;
	}
</style>
