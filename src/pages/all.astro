---
import dictionary, { type Word } from "../dictionary";
import Layout from "../layouts/Layout.astro";

const groups = dictionary.words
	.map((word) => ({
		...word,
		name: word.name.replace(/^the (.+)/, "$1, the"),
	}))
	.reduce<Record<string, Word[]>>((group, word) => {
		(group[word.name[0].replace(/\u00E9/, "e")] ??= []).push(word);

		return group;
	}, {});
---

<Layout title="Index">
	<div class="mb-16 mt-24 flex items-center justify-center font-mono text-neutral-400">
		<div class="columns-1 gap-x-40 space-y-12 md:columns-2 lg:columns-3">
			{
				Object.keys(groups)
					.sort()
					.map((group) => (
						<div>
							<ol class="relative inline-block space-y-2">
								<span class="absolute -left-4 -top-4 text-5xl font-semibold text-neutral-500/30">
									{group.toUpperCase()}
								</span>

								{groups[group]
									.sort((a, b) => a.name.localeCompare(b.name))
									.map((word) => (
										<li>
											<a
												href={`${word.chapter}/${word.slug}`}
												title={`${
													dictionary.chapters[word.chapter].name
												}: ${word.name}`}
												class="hover:text-white"
											>
												{word.name}
											</a>
										</li>
									))}
							</ol>
						</div>
					))
			}
		</div>
	</div>
</Layout>
